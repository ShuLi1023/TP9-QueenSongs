[{"D:\\Document\\A3_1\\II.3506-Advanced Web Technologies\\TP9\\tp9_queen_songs\\src\\App.js":"1","D:\\Document\\A3_1\\II.3506-Advanced Web Technologies\\TP9\\tp9_queen_songs\\src\\SearchSong.js":"2","D:\\Document\\A3_1\\II.3506-Advanced Web Technologies\\TP9\\tp9_queen_songs\\src\\Song.js":"3","D:\\Document\\A3_1\\II.3506-Advanced Web Technologies\\TP9\\tp9_queen_songs\\src\\AutocompleteList.js":"4","D:\\Document\\A3_1\\II.3506-Advanced Web Technologies\\TP9\\tp9_queen_songs\\src\\DisplaySelectedList.js":"5"},{"size":1631,"mtime":1606836570080,"results":"6","hashOfConfig":"7"},{"size":2818,"mtime":1606838460124,"results":"8","hashOfConfig":"7"},{"size":425,"mtime":1606838821913,"results":"9","hashOfConfig":"7"},{"size":1428,"mtime":1606838244741,"results":"10","hashOfConfig":"7"},{"size":763,"mtime":1606838343704,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hoj588",{"filePath":"14","messages":"15","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Document\\A3_1\\II.3506-Advanced Web Technologies\\TP9\\tp9_queen_songs\\src\\App.js",[],"D:\\Document\\A3_1\\II.3506-Advanced Web Technologies\\TP9\\tp9_queen_songs\\src\\SearchSong.js",["23"],"import React from \"react\"\r\nimport AutocompleteList from \"./AutocompleteList\"\r\nimport PropTypes from 'prop-types'\r\n\r\nconst SearchSong = ({selectedSongs, onRemoveSong, onSelectSong, songsList}) => {\r\n  const [activeSong, setActiveSong] = React.useState(0)\r\n  const [autocompleteSongsList, setAutocompleteSongsList] = React.useState(songsList)\r\n  const [showSongs, setShowSongs] = React.useState(false)\r\n  const [userInput, setUserInput] = React.useState(\"\")\r\n\r\n  const toggleSongSelected = (song) => {\r\n    if(selectedSongs.includes(song)){\r\n        onRemoveSong(song)\r\n    }else{\r\n        onSelectSong(song) \r\n    }\r\n\r\n    setAutocompleteSongsList(songsList)\r\n    setShowSongs(false)\r\n    setUserInput(\"\")\r\n    setActiveSong(0)\r\n    \r\n  }\r\n\r\n  const onChange = e => {\r\n    const songSuggestions = songsList.filter( song => song.toLowerCase().includes(e.target.value.toLowerCase()) )\r\n    \r\n    setAutocompleteSongsList(songSuggestions)\r\n    setShowSongs(true)\r\n    setUserInput(e.target.value)\r\n    setActiveSong(0)\r\n  };\r\n\r\n  const onKeyDown = e => {\r\n    switch(e.key){\r\n      case 'Enter':\r\n        toggleSongSelected(autocompleteSongsList[activeSong])\r\n      break\r\n\r\n      case 'ArrowUp':\r\n        setShowSongs(true)\r\n        if (activeSong === 0) {\r\n          return;\r\n        }\r\n        setActiveSong(activeSong - 1)\r\n        if(activeSong > 1 && autocompleteSongsList.length > 4){\r\n            onScroll(false)\r\n        }\r\n      break\r\n\r\n      case 'ArrowDown' :\r\n        setShowSongs(true)\r\n        if (activeSong + 1 === autocompleteSongsList.length) {\r\n          return;\r\n        }\r\n        setActiveSong(activeSong + 1)\r\n        if(activeSong > 1 && autocompleteSongsList.length > 4){\r\n          onScroll(true)\r\n        }\r\n      break;\r\n\r\n      case 'Escape' :\r\n        setShowSongs(false)\r\n        setActiveSong(0)\r\n        break;\r\n\r\n      default:\r\n\r\n    }\r\n  }\r\n  const onScroll = (Boolean) => {\r\n    const elmnt = document.getElementById(\"active\")\r\n    if(elmnt !== null){  elmnt.scrollIntoView(Boolean) }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"autocomplete\">\r\n          <input\r\n            type=\"text\"\r\n            onChange={onChange}\r\n            onKeyDown={onKeyDown}\r\n            value={userInput}\r\n            placeholder='Search songs'\r\n          />\r\n          <AutocompleteList activeSong={activeSong} autocompleteSongsList={autocompleteSongsList} userInput={userInput}\r\n            showSongs={showSongs} selectedSongs = {selectedSongs}  toggleSongSelected = {toggleSongSelected} />\r\n      </div>\r\n      \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nSearchSong.PropTypes = {\r\n  selectedSongs: PropTypes.array.isRequired,\r\n  onRemoveSong: PropTypes.func.isRequired,\r\n  onSelectSong: PropTypes.func.isRequired,\r\n  songsList: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default SearchSong;","D:\\Document\\A3_1\\II.3506-Advanced Web Technologies\\TP9\\tp9_queen_songs\\src\\Song.js",[],"D:\\Document\\A3_1\\II.3506-Advanced Web Technologies\\TP9\\tp9_queen_songs\\src\\AutocompleteList.js",[],"D:\\Document\\A3_1\\II.3506-Advanced Web Technologies\\TP9\\tp9_queen_songs\\src\\DisplaySelectedList.js",[],{"ruleId":"24","severity":2,"message":"25","line":94,"column":12,"nodeType":"26","endLine":94,"endColumn":21},"react/no-typos","Typo in static class property declaration","Identifier"]